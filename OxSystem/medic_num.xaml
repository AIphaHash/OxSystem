<UserControl x:Class="OxSystem.medic_num"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:OxSystem"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
                     xmlns:chart="clr-namespace:Syncfusion.UI.Xaml.Charts;assembly=Syncfusion.SfChart.WPF"
xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
             xmlns:Effects="clr-namespace:System.Windows.Media.Effects;assembly=PresentationCore"


             mc:Ignorable="d" d:DesignWidth="1900" Loaded="UserControl_Loaded" Height="1070">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Scroll.xaml"/>
            </ResourceDictionary.MergedDictionaries>


            <Storyboard x:Key="FadeOutStoryboard">
                <DoubleAnimation
Storyboard.TargetName="report"
Storyboard.TargetProperty="Opacity"
From="0"
To="1"
Duration="0:0:1" />
            </Storyboard>
            <Storyboard x:Key="FadeOutStoryboard1">
                <DoubleAnimation
Storyboard.TargetName="gsetting"
Storyboard.TargetProperty="Opacity"
From="0"
To="1"
Duration="0:0:1" />
            </Storyboard>
        </ResourceDictionary>



    </UserControl.Resources>

    <Grid Height="1070" VerticalAlignment="Center" HorizontalAlignment="Right" Width="1900">

        <Grid x:Name="medicnum">
            <Grid.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#e5eaff"/>
                    <GradientStop Color="#e5eaff" Offset="1"/>
                </LinearGradientBrush>
            </Grid.Background>
            <Grid>

                <Border CornerRadius="20,20,20,20" BorderThickness="15,15,15,15" Margin="21,192,70,70">

                    <Border.BorderBrush>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="White" Offset="0.12"/>
                            <GradientStop Color="White" Offset="0.127"/>
                        </LinearGradientBrush>
                    </Border.BorderBrush>

                    <DataGrid 
    IsReadOnly="True"
    x:Name="DataGrid" 
    MouseDoubleClick="DataGrid_MouseDoubleClick"
    AlternatingRowBackground="White"
    RowBackground="White"
    AutoGenerateColumns="False" 
    CanUserAddRows="False" 
    SelectionMode="Extended" 
    ScrollViewer.VerticalScrollBarVisibility="Auto"
    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
    HeadersVisibility="Column"
    HorizontalGridLinesBrush="White"
    VerticalGridLinesBrush="#FF63676B"
    ColumnHeaderHeight="60"
    RowHeight="35" 
    GridLinesVisibility="None"
    ScrollViewer.CanContentScroll="True" 
    Background="White" 
    SelectedCellsChanged="DataGrid_SelectedCellsChanged" 
    BorderBrush="White" 
    BorderThickness="0,0,0,0" 
                        
    Margin="-15,61,-15,57">

                        <!-- Define the columns of the DataGrid -->
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="ID  ↕️"
                            MinWidth="150"
                            Width="Auto"
                            Binding="{Binding mid}"/>

                            <DataGridTextColumn Header="Medic Name  ↕️"
                            MinWidth="150"
                            Width="*"
                            Binding="{Binding mname}"/>

                            <DataGridTextColumn Header="Buy price  ↕️"
                            MinWidth="150"
                            Width="*"
                            Binding="{Binding bprice}"/>

                            <DataGridTextColumn Header="Sell price  ↕️"
                            MinWidth="150"
                            Width="Auto"
                            Binding="{Binding sprice}"/>

                            <DataGridTextColumn Header="Expire Date  ↕️"
                            MinWidth="150"
                            Width="*"
                            Binding="{Binding exdate}"/>

                            <DataGridTextColumn Header="Manufacture Date  ↕️"
                            MinWidth="150"
                            Width="*"
                            Binding="{Binding madate}"/>

                            <DataGridTextColumn Header="Medic Num  ↕️"
                            MinWidth="150"
                            Width="Auto"
                            Binding="{Binding nummedic}"/>

                            <DataGridTextColumn Header="Storage name  ↕️"
                            MinWidth="150"
                            Width="*"
                            Binding="{Binding sname}"/>
                        </DataGrid.Columns>

                        <!-- DataGrid column header style -->
                        <DataGrid.ColumnHeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF0BA9A4"/>
                                            <GradientStop Color="#FF2A807E" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="BorderThickness" Value="0,0,0,0"/>
                                <Setter Property="BorderBrush" Value="#FFF1F1F1"/>
                                <Setter Property="FontSize" Value="19"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                <Setter Property="Padding" Value="20,0,0,0"/>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>

                        <!-- DataGridCell Style for adding padding -->
                        <DataGrid.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <Setter Property="Padding" Value="20,0,20,0"/>
                                <Setter Property="FontSize" Value="16"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="Background" Value="White"/>
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="#FF6CA4A2"/>
                                        <Setter Property="Foreground" Value="Black"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>

                        <!-- DataGridRow Style for adding white space between row border and cell -->
                        <DataGrid.RowStyle>
                            <Style TargetType="{x:Type DataGridRow}">
                                <Setter Property="Margin" Value="20,10,15,0"/>
                                <Setter Property="Padding" Value="0,0,0,0"/>
                                <Setter Property="BorderThickness" Value="0,0,0,1"/>
                                <Setter Property="BorderBrush" Value="#FFE6E6E6"/>
                                <Setter Property="Background" Value="Transparent"/>
                            </Style>
                        </DataGrid.RowStyle>
                    </DataGrid>



                </Border>
                <Border CornerRadius="0,0,20,20" Margin="21,192,70,802" RenderTransformOrigin="0.5,0.5" Background="White">
                    <Border.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleY="-1"/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Border.RenderTransform>
                </Border>
                <Grid>
                    <Border Background="White" Margin="835,92,579,902" CornerRadius="20">
                        <Grid>
                            <Border Background="#FFE2EDED" Margin="5,6,375,6" CornerRadius="15,5,5,15"/>
                            <Label Content="The storage with the most medicines " Margin="111,0,-12,38" Height="32" VerticalAlignment="Bottom" Foreground="#FF949494" FontWeight="Bold" FontSize="14"/>

                            <Label x:Name="mosts" Content="" Margin="114,31,10,10" FontSize="18" FontWeight="Bold"/>
                            <Image x:Name="salesgif1" 
RenderTransformOrigin="0.527,0.502" Margin="17,7,387,7" Cursor="Hand"/>
                        </Grid>
                    </Border>
                    <Border CornerRadius="100" Margin="52,151,1640,909" RenderTransformOrigin="0.5,0.5">
                        <Border.Background>
                            <RadialGradientBrush>
                                <GradientStop Color="#FF0FA39F"/>
                                <GradientStop Color="#FFE5EAFF" Offset="1"/>
                            </RadialGradientBrush>
                        </Border.Background>
                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleY="-1"/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Border.RenderTransform>
                    </Border>
                    <Border Background="White" Margin="631,92,1071,902" CornerRadius="20">
                        <Grid>
                            <Border Background="#FFE2EDED" Margin="5,6,122,6" CornerRadius="15,5,5,15"/>
                            <Label Content="Most Expensive" Margin="76,0,10,38" Height="32" VerticalAlignment="Bottom" Foreground="#FF949494" FontWeight="Bold" FontSize="14"/>
                            <Label x:Name="moste" Content="" Margin="81,31,23,10" FontSize="18" FontWeight="Bold"/>

                            <Image x:Name="salesgif4" 
RenderTransformOrigin="0.527,0.502" Margin="10,10,127,10" Cursor="Hand"/>
                        </Grid>
                    </Border>
                    <Border CornerRadius="0,0,20,20" Margin="21,926,70,70">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="White"/>
                                <GradientStop Color="#FF1B9490" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>

                    <Border Background="White" Margin="1326,92,70,902" CornerRadius="20">
                        <Grid>

                            <Border Background="#FFE2EDED" Margin="5,6,396,6" CornerRadius="15,5,5,15"/>
                            <Label Content="The supplier who made the most sales" Margin="108,0,10,38" Height="32" VerticalAlignment="Bottom" Foreground="#FF949494" FontWeight="Bold" FontSize="14"/>
                            <Label x:Name="mostsup" Content="" Margin="113,31,10,10" FontSize="18" FontWeight="Bold"/>

                            <Image x:Name="salesgif2" 
RenderTransformOrigin="0.527,0.502" Margin="8,7,400,6" Cursor="Hand"/>
                        </Grid>
                    </Border>
                    <Border Background="White" Margin="336,92,1274,902" CornerRadius="20" Loaded="Border_Loaded_1">
                        <Grid>
                            <Border Background="#FFE2EDED" Margin="5,6,201,6" CornerRadius="15,5,5,15"/>
                            <Label Content="Total Medics " Margin="89,0,10,38" Height="32" VerticalAlignment="Bottom" Foreground="#FF949494" FontWeight="Bold" FontSize="14"/>
                            <Label x:Name="totalmedic" Content="" Margin="89,31,15,10" FontSize="18" FontWeight="Bold"/>
                            <Image x:Name="salesgif3" 
RenderTransformOrigin="0.527,0.502" Margin="10,10,204,12" Cursor="Hand"/>
                        </Grid>
                    </Border>
                </Grid>
                <TextBox IsReadOnly="False" x:Name="searchBox1" Padding="20,13,0,0" BorderThickness="2" Text="🔍  Type to search "  Margin="36,206,1256,812" Background="White" FontSize="18" TextChanged="searchBox_TextChanged" GotFocus="searchBox1_GotFocus" LostFocus="searchBox1_LostFocus" BorderBrush="#FFABADB3" >
                    <TextBox.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="20,0,0,0"/>
                        </Style>
                    </TextBox.Resources>
                    <TextBox.Foreground>
                        <SolidColorBrush Color="#FF969696" Opacity="1"/>
                    </TextBox.Foreground>
                </TextBox>
                <Label Content="Note*" Margin="34,948,1776,68" FontSize="20" FontWeight="Bold" Foreground="White"/>
                <Label Content="Double Click on a Specific Medic to Edit the Medic" Margin="101,959,1231,74" FontSize="18" Foreground="White"/>
                <Button x:Name="delete_Copy" BorderThickness="0" Content="           Delete Selected" Padding="0,0,20,0"
     Margin="886,0,815,814" BorderBrush="{x:Null}" RenderTransformOrigin="0.5,0.5" Foreground="White"
     Click="Button_Click" Height="44" VerticalAlignment="Bottom" FontSize="18" FontWeight="Bold">

                    <Button.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="10"/>
                        </Style>
                    </Button.Resources>

                    <Button.Background>
                        <LinearGradientBrush EndPoint="1,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF9E4D4D"/>
                            <GradientStop Color="#FFDC7272" Offset="1"/>
                        </LinearGradientBrush>
                    </Button.Background>

                    <Button.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleY="1" ScaleX="1"/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Button.RenderTransform>

                    <!-- Apply the saved ControlTemplate with EventTriggers -->
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <!-- Original button border -->
                                <Border x:Name="buttonBorder" BorderBrush="Transparent" BorderThickness="0" CornerRadius="10" Background="#FF804747">
                                    <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>

                                <!-- Overlay border for the click animation -->
                                <Border x:Name="overlayBorder" Background="White" Opacity="0" CornerRadius="10" IsHitTestVisible="False" />
                            </Grid>

                            <ControlTemplate.Triggers>
                                <!-- Mouse Enter animation to darken the background color -->
                                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="buttonBorder"
                                 Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                 To="#FF562222" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>

                                <!-- Mouse Leave animation to revert to the original background color -->
                                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="buttonBorder"
                                 Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                 To="#FF804747" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>

                                <!-- Click animation to show the overlay and fade it out -->
                                <EventTrigger RoutedEvent="ButtonBase.Click">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="overlayBorder"
                                 Storyboard.TargetProperty="Opacity"
                                 From="0.4" To="0" Duration="0:0:0.3" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <Image x:Name="accountentimage6" 
RenderTransformOrigin="0.527,0.502" Margin="899,214,957,816" Cursor="Hand" MouseLeftButtonDown="accountentimage6_MouseLeftButtonDown"/>
                <Button x:Name="add_Copy" Padding="0,0,0,0" BorderThickness="0" Content="Add" Margin="1090,0,754,813"
     BorderBrush="{x:Null}" RenderTransformOrigin="0.5,0.5" Foreground="White" Height="44" 
     VerticalAlignment="Bottom" FontSize="16" Click="pdf_Click2">

                    <Button.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="10"/>
                        </Style>
                    </Button.Resources>

                    <Button.Background>
                        <LinearGradientBrush StartPoint="0.5,0">
                            <GradientStop Color="#FF0BA9A4"/>
                            <GradientStop Color="#FF418C8C" Offset="1"/>
                        </LinearGradientBrush>
                    </Button.Background>

                    <Button.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleY="1" ScaleX="1"/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Button.RenderTransform>

                    <!-- Apply the ControlTemplate with EventTriggers -->
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <!-- Original button border -->
                                <Border x:Name="buttonBorder" BorderBrush="Transparent" BorderThickness="0" CornerRadius="10" Background="#FF3C928F">
                                    <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>

                                <!-- Overlay border for the click animation -->
                                <Border x:Name="overlayBorder" Background="White" Opacity="0" CornerRadius="10" IsHitTestVisible="False" />
                            </Grid>

                            <ControlTemplate.Triggers>
                                <!-- Mouse Enter animation to darken the background color -->
                                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="buttonBorder"
                                 Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                 To="#FF1A504E" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>

                                <!-- Mouse Leave animation to revert the background color -->
                                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="buttonBorder"
                                 Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                 To="#FF3C928F" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>

                                <!-- Click animation to show the overlay and fade it out -->
                                <EventTrigger RoutedEvent="ButtonBase.Click">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="overlayBorder"
                                 Storyboard.TargetProperty="Opacity"
                                 From="0.4" To="0" Duration="0:0:0.3" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <Button x:Name="pdf_Copy" Padding="0,0,0,0" BorderThickness="0" Content="              Print , Pdf  " 
     Margin="1668,0,85,813" BorderBrush="{x:Null}" RenderTransformOrigin="0.5,0.5" Foreground="White"  
     Height="44" VerticalAlignment="Bottom" FontSize="16" Click="pdf_Click">

                    <Button.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="10"/>
                        </Style>
                    </Button.Resources>
                    <Button.Background>
                        <LinearGradientBrush StartPoint="0.5,0">
                            <GradientStop Color="#FF318885"/>
                            <GradientStop Color="#FF0B9292" Offset="1"/>
                        </LinearGradientBrush>
                    </Button.Background>

                    <Button.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleY="1" ScaleX="1"/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Button.RenderTransform>

                    <!-- Apply the saved ControlTemplate with EventTriggers -->
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <!-- This is the original button border -->
                                <Border x:Name="buttonBorder" BorderBrush="Transparent" BorderThickness="0" CornerRadius="10" Background="#FF2C6765">
                                    <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>

                                <!-- Overlay border for the animation -->
                                <Border x:Name="overlayBorder" Background="White" Opacity="0" CornerRadius="10" IsHitTestVisible="False" />
                            </Grid>

                            <ControlTemplate.Triggers>
                                <!-- Mouse Enter and Leave animations for the background color -->
                                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <!-- Darken the background color slightly -->
                                            <ColorAnimation Storyboard.TargetName="buttonBorder"
                                 Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                 To="#FF1A4241" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>

                                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <!-- Revert the background color to original -->
                                            <ColorAnimation Storyboard.TargetName="buttonBorder"
                                 Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                 To="#FF2C6765" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>

                                <!-- Click animation to show the overlay and fade it out -->
                                <EventTrigger RoutedEvent="ButtonBase.Click">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="overlayBorder"
                                 Storyboard.TargetProperty="Opacity"
                                 From="0.4" To="0" Duration="0:0:0.3" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>

                </Button>
                <Image x:Name="accountentimage7" 
RenderTransformOrigin="0.527,0.502" Margin="1678,216,176,816" Cursor="Hand" MouseLeftButtonDown="accountentimage7_MouseLeftButtonDown"/>
                <ComboBox Text="Medic Name" 
HorizontalContentAlignment="Center" 
VerticalContentAlignment="Center" 
IsEditable="True" 
x:Name="supnam" 
HorizontalAlignment="Left" 
Margin="642,206,0,0" 
VerticalAlignment="Top" 
Width="236" 
Height="52" 
BorderBrush="{x:Null}" 
FontSize="22" 
BorderThickness="2,2,2,2" SelectionChanged="supname_SelectionChanged">
                    <ComboBoxItem Content="ID" />
                    <ComboBoxItem Content="Medic Name" />
                    <ComboBoxItem Content="Buy Price" />
                    <ComboBoxItem Content="Sell Price" />
                    <ComboBoxItem Content="Expire Date" />
                    <ComboBoxItem Content="Manufacture Date" />
                    <ComboBoxItem Content="Medic Num" />
                    <ComboBoxItem Content="Storage Name" />
                </ComboBox>
            </Grid>



            <Grid Margin="-8,50,-8,-11" Height="1019.5">
                <local:editmedic x:Name="editmedic" Visibility="Collapsed"/>

            </Grid>





            <Grid x:Name="medicadd1" >
                <local:medic_add x:Name="medicadd" Visibility="Collapsed"/>
            </Grid>
            <Grid Margin="0,52,0,0">
                <local:report x:Name="report" Visibility="Collapsed"/>
            </Grid>
            <Grid x:Name="gsetting" Margin="-14,-43,0,0">
                <local:setting x:Name="setting" Visibility="Collapsed"/>
            </Grid>



            <Grid x:Name="navbar">

                <Border Background="White" Margin="-13,-3,-13,1018" Loaded="Border_Loaded" Height="55"/>
                <Label Content="Admin :" FontSize="20" Margin="36,10,1763,1011" FontWeight="Bold"/>
                <Label x:Name="fullnameLabel" Content="" FontSize="20" Margin="121,10,1520,1011"/>
                <Button x:Name="add_Copy1" Padding="0,0,0,0" BorderThickness="0" Content="📄 Reports" 
    Margin="1695,0,105,1022" BorderBrush="{x:Null}" RenderTransformOrigin="0.5,0.5" 
    Foreground="#FF6D6D6D" Height="38" VerticalAlignment="Bottom" FontSize="18" Click="Button_Clickr">

                    <Button.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="10"/>
                        </Style>
                    </Button.Resources>

                    <Button.Background>
                        <LinearGradientBrush StartPoint="0.5,0">
                            <GradientStop Color="#FF0BA9A4"/>
                            <GradientStop Color="#FF418C8C" Offset="1"/>
                        </LinearGradientBrush>
                    </Button.Background>

                    <Button.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleY="1" ScaleX="1" />
                            <SkewTransform />
                            <RotateTransform />
                            <TranslateTransform />
                        </TransformGroup>
                    </Button.RenderTransform>

                    <!-- Apply the ControlTemplate with EventTriggers -->
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <!-- Original button border -->
                                <Border x:Name="buttonBorder" BorderBrush="Transparent" BorderThickness="0" CornerRadius="5" Background="{x:Null}">
                                    <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>

                                <!-- Overlay border for the click animation -->
                                <Border x:Name="overlayBorder" Background="White" Opacity="0" CornerRadius="5" IsHitTestVisible="False" />
                            </Grid>

                            <ControlTemplate.Triggers>

                                <!-- Click animation to grow the button and then shrink back -->

                                <!-- Mouse Enter animation to change Foreground color -->
                                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="contentPresenter"
                                Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                To="#FF27908E" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>

                                <!-- Mouse Leave animation to revert Foreground color -->
                                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="contentPresenter"
                                Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                To="#FF6D6D6D" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <Button x:Name="add_Copy2" Padding="0,0,0,0" BorderThickness="0" Content="⚙️ Setting" 
        Margin="1795,0,5,1022" BorderBrush="{x:Null}" RenderTransformOrigin="0.5,0.5" 
        Foreground="#FF6D6D6D" Height="38" VerticalAlignment="Bottom" FontSize="18" Click="Button_Clicks">

                    <Button.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="10"/>
                        </Style>
                    </Button.Resources>

                    <Button.Background>
                        <LinearGradientBrush StartPoint="0.5,0">
                            <GradientStop Color="#FF0BA9A4"/>
                            <GradientStop Color="#FF418C8C" Offset="1"/>
                        </LinearGradientBrush>
                    </Button.Background>

                    <Button.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleY="1" ScaleX="1" />
                            <SkewTransform />
                            <RotateTransform />
                            <TranslateTransform />
                        </TransformGroup>
                    </Button.RenderTransform>

                    <!-- Apply the ControlTemplate with EventTriggers -->
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <!-- Original button border -->
                                <Border x:Name="buttonBorder" BorderBrush="Transparent" BorderThickness="0" CornerRadius="5" Background="{x:Null}">
                                    <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>

                                <!-- Overlay border for the click animation -->
                                <Border x:Name="overlayBorder" Background="White" Opacity="0" CornerRadius="5" IsHitTestVisible="False" />
                            </Grid>

                            <ControlTemplate.Triggers>
                                <!-- Mouse Enter animation to change Foreground color -->
                                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="contentPresenter"
                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                            To="#FF27908E" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>

                                <!-- Mouse Leave animation to revert Foreground color -->
                                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="contentPresenter"
                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                            To="#FF6D6D6D" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>

                                <!-- Click animation to grow the button and then shrink back -->

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>

                <TextBlock TextAlignment="Center" Text="{Binding CurrentTime}" FontSize="18" Foreground="Black" Margin="814,19,814,1008"/>
                <Image x:Name="back"

RenderTransformOrigin="0.527,0.502"
Margin="1057,3,0,1009"
Cursor="Hand"
MouseLeftButtonDown="back_MouseLeftButtonDown"
HorizontalAlignment="Left"
Width="50">
                    <Image.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform x:Name="scaleTransform"/>
                            <SkewTransform/>
                            <RotateTransform Angle="359.992"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Image.RenderTransform>
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value="0.6"/>
                                    <Setter Property="RenderTransform">
                                        <Setter.Value>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1.2" ScaleY="1.2"/>
                                                <SkewTransform/>
                                                <RotateTransform Angle="359.992"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter Property="Opacity" Value="1"/>
                                    <Setter Property="RenderTransform">
                                        <Setter.Value>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                <SkewTransform/>
                                                <RotateTransform Angle="359.992"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <Label Content="👤" FontSize="24" Margin="3,8,1860,1013"/>
            </Grid>
            <Label HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Content="View Medics" Margin="40,95,1630,919" FontSize="36" FontWeight="Bold"/>



        </Grid>



    </Grid>
</UserControl>
