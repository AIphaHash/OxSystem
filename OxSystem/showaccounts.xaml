<UserControl x:Name="showacc" x:Class="OxSystem.showaccounts"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:OxSystem"
             xmlns:gif="http://wpfanimatedgif.codeplex.com"
             mc:Ignorable="d" 
              Loaded="UserControl_Loaded" Height="1070" Width="1900" Background="#FFE3EBF3">


    <UserControl.Resources>

        <Storyboard x:Key="GlowAnimation" AutoReverse="True" RepeatBehavior="Forever">
            <DoubleAnimation Storyboard.TargetName="glowingBorder"
                     Storyboard.TargetProperty="Opacity"
                     From="1.0" To="0.1" Duration="0:0:2"/>
        </Storyboard>


        <Storyboard x:Key="FadeOutStoryboard">
            <DoubleAnimation
Storyboard.TargetName="report"
Storyboard.TargetProperty="Opacity"
From="0"
To="1"
Duration="0:0:1" />
        </Storyboard>
        <Storyboard x:Key="FadeOutStoryboard1">
            <DoubleAnimation
Storyboard.TargetName="gsetting"
Storyboard.TargetProperty="Opacity"
From="0"
To="1"
Duration="0:0:1" />
        </Storyboard>
    </UserControl.Resources>
    <Grid>
        <Grid x:Name="showacc1"   Width="1900" Height="1059">

            <Grid x:Name="datagrid" Margin="0,0,0,-10" Height="1059">

                <Border CornerRadius="20,20,20,20" BorderThickness="15,15,15,15" Margin="20,164,96,51">

                    <Border.BorderBrush>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="White" Offset="0.12"/>
                            <GradientStop Color="White" Offset="0.127"/>
                        </LinearGradientBrush>
                    </Border.BorderBrush>

                    <DataGrid IsReadOnly="True" x:Name="DataGrid" 
          MouseDoubleClick="DataGrid_MouseDoubleClick"
          AutoGenerateColumns="False" 
          CanUserAddRows="False" 
          SelectionMode="Extended" 
          HeadersVisibility="Column"
          HorizontalGridLinesBrush="White"
          VerticalGridLinesBrush="#FF63676B"
          ColumnHeaderHeight="60"
          RowHeight="45"
                        GridLinesVisibility="None"
          ScrollViewer.CanContentScroll="True" 
          Background="White" 
          SelectedCellsChanged="DataGrid_SelectedCellsChanged" 
          BorderBrush="White" 
          Margin="-15,66,-15,47" 
          BorderThickness="0,0,0,0">

                        <DataGrid.Resources>
                            <!-- Custom ScrollBar Style -->
                            <Style TargetType="{x:Type ScrollBar}">
                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="0.00001*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="0.00001*"/>
                                                </Grid.RowDefinitions>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <!-- Custom ScrollBar Button Style -->
                            <Style x:Key="ScrollBarButtonStyle" TargetType="{x:Type RepeatButton}">
                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                <Setter Property="IsTabStop" Value="False"/>
                                <Setter Property="Focusable" Value="False"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                            <Border Background="Gray" Width="16" Height="16" CornerRadius="8"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <!-- Custom ScrollBar Thumb Style -->
                            <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                <Setter Property="IsTabStop" Value="False"/>
                                <Setter Property="Focusable" Value="False"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                            <Border Background="Gray" Width="16" CornerRadius="8"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGrid.Resources>

                        <DataGrid.Columns>
                            <DataGridTextColumn Header="ID  ↕️" MinWidth="80" Width="100" Binding="{Binding id}"/>
                            <DataGridTextColumn Header="Full Name  ↕️" MinWidth="150" Width="280" Binding="{Binding fullname}"/>
                            <DataGridTextColumn Header="Role  ↕️" MinWidth="150" Width="120" Binding="{Binding role}"/>
                            <DataGridTextColumn Header="Email  ↕️" MinWidth="150" Width="300" Binding="{Binding email}"/>
                            <DataGridTextColumn Header="Address  ↕️" MinWidth="150" Width="300" Binding="{Binding address}"/>
                            <DataGridTextColumn Header="Date of Birth  ↕️" MinWidth="150" Width="300" Binding="{Binding dob}"/>
                            <DataGridTextColumn Header="Phone Number  ↕️" MinWidth="150" Width="*" Binding="{Binding phone_num}"/>
                        </DataGrid.Columns>

                        <DataGrid.ColumnHeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF0BA9A4"/>
                                            <GradientStop Color="#FF2A807E" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="BorderThickness" Value="0,0,0,0"/>
                                <Setter Property="BorderBrush" Value="#FFF1F1F1"/>
                                <Setter Property="FontSize" Value="19"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                <Setter Property="Padding" Value="20,0,0,0"/>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>

                        <!-- DataGridCell Style for adding padding -->
                        <DataGrid.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <Setter Property="Padding" Value="20,0,20,0"/>
                                <!-- Increased padding for more space -->
                                <Setter Property="FontSize" Value="16"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="Background" Value="White"/>
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="#FF6CA4A2"/>
                                        <Setter Property="Foreground" Value="Black"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>

                        <!-- DataGridRow Style for adding white space between row border and cell -->
                        <DataGrid.RowStyle>
                            <Style TargetType="{x:Type DataGridRow}">
                                <Setter Property="Margin" Value="20,10,0,0"/>
                                <!-- Increased margin for spacing between rows -->
                                <Setter Property="Padding" Value="0,0,0,0"/>
                                <Setter Property="BorderThickness" Value="0,0,0,1"/>
                                <Setter Property="BorderBrush" Value="#FFE6E6E6"/>
                                <Setter Property="Background" Value="Transparent"/>
                            </Style>
                        </DataGrid.RowStyle>

                    </DataGrid>







                </Border>

                <Border Background="White" Margin="34,178,110,814"/>
                <Border Background="White" Margin="34,946,110,63"/>
                <Border CornerRadius="0,0,20,20" Margin="20,946,96,51">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="White"/>
                            <GradientStop Color="#FF1BA09C" Offset="0.894"/>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <Label Content="Note*" Margin="34,960,1776,45" FontSize="20" FontWeight="Bold" Foreground="White"/>
                <Label Content="Double Click on a Specific Account to Edit the Account" Margin="101,971,1231,51" FontSize="18" Foreground="White"/>
                <Grid Width="1900" Margin="1,-5,-1,5">
                    <Button x:Name="delete" BorderThickness="0" Content="            Delete Selected" Padding="0,0,20,0"
        Margin="767,0,929,826" BorderBrush="{x:Null}" RenderTransformOrigin="0.5,0.5" Foreground="White"
        Click="Button_Click" Height="44" VerticalAlignment="Bottom" FontSize="18" FontWeight="Bold">

                        <Button.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="10"/>
                            </Style>
                        </Button.Resources>

                        <Button.Background>
                            <LinearGradientBrush EndPoint="1,1" StartPoint="0.5,0">
                                <GradientStop Color="#FF9E4D4D"/>
                                <GradientStop Color="#FFDC7272" Offset="1"/>
                            </LinearGradientBrush>
                        </Button.Background>

                        <Button.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleY="1" ScaleX="1"/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Button.RenderTransform>

                        <!-- Apply the saved ControlTemplate with EventTriggers -->
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Grid>
                                    <!-- Original button border -->
                                    <Border x:Name="buttonBorder" BorderBrush="Transparent" BorderThickness="0" CornerRadius="10" Background="#FF804747">
                                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>

                                    <!-- Overlay border for the click animation -->
                                    <Border x:Name="overlayBorder" Background="White" Opacity="0" CornerRadius="10" IsHitTestVisible="False" />
                                </Grid>

                                <ControlTemplate.Triggers>
                                    <!-- Mouse Enter animation to darken the background color -->
                                    <EventTrigger RoutedEvent="MouseEnter">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="buttonBorder"
                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                To="#FF562222" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>

                                    <!-- Mouse Leave animation to revert to the original background color -->
                                    <EventTrigger RoutedEvent="MouseLeave">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="buttonBorder"
                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                To="#FF804747" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>

                                    <!-- Click animation to show the overlay and fade it out -->
                                    <EventTrigger RoutedEvent="Button.Click">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="overlayBorder"
                                             Storyboard.TargetProperty="Opacity"
                                             From="0.4" To="0" Duration="0:0:0.3" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>



                    <Image x:Name="accountentimage6" 
RenderTransformOrigin="0.527,0.502" Margin="783,194,1083,831" Cursor="Hand" MouseLeftButtonDown="accountentimage6_MouseLeftButtonDown"/>
                    <Button x:Name="pdf" Padding="0,0,0,0" BorderThickness="0" Content="              Print , Pdf  " 
        Margin="1620,0,113,826" BorderBrush="{x:Null}" RenderTransformOrigin="0.5,0.5" Foreground="White"  
        Height="44" VerticalAlignment="Bottom" FontSize="16" Click="pdf_Click" MouseEnter="pdf_MouseEnter" MouseLeave="pdf_MouseLeave">

                        <Button.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="10"/>
                            </Style>
                        </Button.Resources>
                        <Button.Background>
                            <LinearGradientBrush StartPoint="0.5,0">
                                <GradientStop Color="#FF318885"/>
                                <GradientStop Color="#FF0B9292" Offset="1"/>
                            </LinearGradientBrush>
                        </Button.Background>

                        <Button.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleY="1" ScaleX="1"/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Button.RenderTransform>

                        <!-- Apply the saved ControlTemplate with EventTriggers -->
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Grid>
                                    <!-- This is the original button border -->
                                    <Border x:Name="buttonBorder" BorderBrush="Transparent" BorderThickness="0" CornerRadius="10" Background="#FF2C6765">
                                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>

                                    <!-- Overlay border for the animation -->
                                    <Border x:Name="overlayBorder" Background="White" Opacity="0" CornerRadius="10" IsHitTestVisible="False" />
                                </Grid>

                                <ControlTemplate.Triggers>
                                    <!-- Mouse Enter and Leave animations for the background color -->
                                    <EventTrigger RoutedEvent="MouseEnter">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <!-- Darken the background color slightly -->
                                                <ColorAnimation Storyboard.TargetName="buttonBorder"
                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                To="#FF1A4241" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>

                                    <EventTrigger RoutedEvent="MouseLeave">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <!-- Revert the background color to original -->
                                                <ColorAnimation Storyboard.TargetName="buttonBorder"
                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                To="#FF2C6765" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>

                                    <!-- Click animation to show the overlay and fade it out -->
                                    <EventTrigger RoutedEvent="Button.Click">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="overlayBorder"
                                             Storyboard.TargetProperty="Opacity"
                                             From="0.4" To="0" Duration="0:0:0.3" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>

                    </Button>


                    <Image x:Name="accountentimage7" 
RenderTransformOrigin="0.527,0.502" Margin="1634,190,214,827" Cursor="Hand" MouseLeftButtonDown="accountentimage7_MouseLeftButtonDown"/>
                    <Button x:Name="add" Padding="0,0,0,0" BorderThickness="0" Content="Add" Margin="976,0,868,826"
        BorderBrush="{x:Null}" RenderTransformOrigin="0.5,0.5" Foreground="White" Height="44" 
        VerticalAlignment="Bottom" FontSize="16" Click="pdf_Click1">

                        <Button.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="10"/>
                            </Style>
                        </Button.Resources>

                        <Button.Background>
                            <LinearGradientBrush StartPoint="0.5,0">
                                <GradientStop Color="#FF0BA9A4"/>
                                <GradientStop Color="#FF418C8C" Offset="1"/>
                            </LinearGradientBrush>
                        </Button.Background>

                        <Button.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleY="1" ScaleX="1"/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Button.RenderTransform>

                        <!-- Apply the ControlTemplate with EventTriggers -->
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Grid>
                                    <!-- Original button border -->
                                    <Border x:Name="buttonBorder" BorderBrush="Transparent" BorderThickness="0" CornerRadius="10" Background="#FF3C928F">
                                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>

                                    <!-- Overlay border for the click animation -->
                                    <Border x:Name="overlayBorder" Background="White" Opacity="0" CornerRadius="10" IsHitTestVisible="False" />
                                </Grid>

                                <ControlTemplate.Triggers>
                                    <!-- Mouse Enter animation to darken the background color -->
                                    <EventTrigger RoutedEvent="MouseEnter">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="buttonBorder"
                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                To="#FF1A504E" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>

                                    <!-- Mouse Leave animation to revert the background color -->
                                    <EventTrigger RoutedEvent="MouseLeave">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="buttonBorder"
                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                To="#FF3C928F" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>

                                    <!-- Click animation to show the overlay and fade it out -->
                                    <EventTrigger RoutedEvent="Button.Click">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="overlayBorder"
                                             Storyboard.TargetProperty="Opacity"
                                             From="0.4" To="0" Duration="0:0:0.3" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>


                    <Border Background="White" Margin="1078,66,101,905" CornerRadius="20">

                    </Border>
                    <Image  x:Name="Pharm"  
RenderTransformOrigin="0.527,0.502" Margin="1115,68,703,907" Cursor="Hand"/>
                </Grid>
                <Label Content="Users num" HorizontalAlignment="Left" Margin="1683,73,0,0" VerticalAlignment="Top" FontSize="16" FontWeight="Bold" Foreground="#FF6B6B6B"/>
                <Label Content="Admin num" HorizontalAlignment="Left" Margin="1230,73,0,0" VerticalAlignment="Top" FontSize="16" FontWeight="Bold" Foreground="DimGray"/>
                <Label Content="Accountent num" HorizontalAlignment="Left" Margin="1519,73,0,0" VerticalAlignment="Top" FontSize="16" FontWeight="Bold" Foreground="DimGray"/>
                <Label HorizontalContentAlignment="Center" x:Name="usernum" Content="44" HorizontalAlignment="Left" Margin="1689,99,0,0" VerticalAlignment="Top" FontSize="22" FontWeight="Bold" Foreground="#FF6B6B6B" Width="77"/>
                <Label HorizontalContentAlignment="Center" x:Name="pharmnum" Content="44" HorizontalAlignment="Left" Margin="1390,99,0,0" VerticalAlignment="Top" FontSize="22" FontWeight="Bold" Width="62" Foreground="DimGray"/>
                <Label HorizontalContentAlignment="Center" x:Name="adminnum" Content="44" HorizontalAlignment="Left" Margin="1245,99,0,0" VerticalAlignment="Top" FontSize="22" FontWeight="Bold" Width="65" Foreground="DimGray"/>
                <Label HorizontalContentAlignment="Center" x:Name="accountentnum" Content="44" HorizontalAlignment="Left" Margin="1552,99,0,0" VerticalAlignment="Top" FontSize="22" FontWeight="Bold" Width="65" Foreground="DimGray"/>


                <Label x:Name="usersn" Content="Pharmcists num" HorizontalAlignment="Left" Margin="1358,73,0,0" VerticalAlignment="Top" FontSize="16" FontWeight="Bold" Foreground="DimGray"/>

                <TextBox  Text="🔍  Type to search " x:Name="searchBox1" Padding="10,11,0,0" TextAlignment="Left" FontSize="20" Background="White" Margin="34,178,1378,827" BorderBrush="#FFABB3B3" Foreground="#FF8E8E8E" LostFocus="searchBox1_LostFocus" MouseEnter="searchBox1_MouseEnter" MouseLeave="searchBox1_MouseLeave" BorderThickness="2,2,2,2" GotFocus="searchBox1_GotFocus" TextChanged="searchBox_TextChanged">

                    <TextBox.RenderTransform>
                        <TranslateTransform />
                    </TextBox.RenderTransform>
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="BorderBrush">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFC0FEFF"/>
                                        <GradientStop Color="#FFA2FDB5" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderThickness" Value="2"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TextBox}">
                                        <Border 
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        CornerRadius="15,0,0,0" Margin="-1,0,0,0">

                                            <ScrollViewer x:Name="PART_ContentHost"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TextBox.Style>
                </TextBox>
                <ComboBox Text="" 
          HorizontalContentAlignment="Center" 
          VerticalContentAlignment="Center" 
          IsEditable="True" 
          x:Name="supnam" 
          HorizontalAlignment="Left" 
          Margin="522,178,0,0" 
          VerticalAlignment="Top" 
          Width="234" 
          Height="54" 
          BorderBrush="{x:Null}" 
          FontSize="22" 
          BorderThickness="2,2,2,2" SelectionChanged="supname_SelectionChanged">
                    <ComboBoxItem Content="ID" />
                    <ComboBoxItem Content="Full Name" />
                    <ComboBoxItem Content="Role" />
                    <ComboBoxItem Content="Email" />
                    <ComboBoxItem Content="Address" />
                    <ComboBoxItem Content="Date of Birth" />
                    <ComboBoxItem Content="Phone Number" />
                </ComboBox>

            </Grid>
            <Grid Height="1057" Width="1900" Margin="0,0,0,2">
                <local:editaccounts4 x:Name="editaccount" Visibility="Collapsed"/>

            </Grid>
            <Grid x:Name="navbar">

                <Border Background="White" Margin="-13,-6,-13,1009" Loaded="Border_Loaded" Height="55"/>
                <Label Content="Admin :" FontSize="20" Margin="34,4,1765,1017" FontWeight="Bold"/>
                <Label x:Name="fullnameLabel" Content="" FontSize="20" Margin="119,4,1522,1017"/>
                <Button x:Name="add_Copy1" Padding="0,0,0,0" BorderThickness="0" Content="📄 Reports" 
    Margin="1695,0,105,1018" BorderBrush="{x:Null}" RenderTransformOrigin="0.5,0.5" 
    Foreground="#FF6D6D6D" Height="38" VerticalAlignment="Bottom" FontSize="18" Click="Button_Clickr">

                    <Button.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="10"/>
                        </Style>
                    </Button.Resources>

                    <Button.Background>
                        <LinearGradientBrush StartPoint="0.5,0">
                            <GradientStop Color="#FF0BA9A4"/>
                            <GradientStop Color="#FF418C8C" Offset="1"/>
                        </LinearGradientBrush>
                    </Button.Background>

                    <Button.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleY="1" ScaleX="1" />
                            <SkewTransform />
                            <RotateTransform />
                            <TranslateTransform />
                        </TransformGroup>
                    </Button.RenderTransform>

                    <!-- Apply the ControlTemplate with EventTriggers -->
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <!-- Original button border -->
                                <Border x:Name="buttonBorder" BorderBrush="Transparent" BorderThickness="0" CornerRadius="5" Background="{x:Null}">
                                    <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>

                                <!-- Overlay border for the click animation -->
                                <Border x:Name="overlayBorder" Background="White" Opacity="0" CornerRadius="5" IsHitTestVisible="False" />
                            </Grid>

                            <ControlTemplate.Triggers>

                                <!-- Click animation to grow the button and then shrink back -->

                                <!-- Mouse Enter animation to change Foreground color -->
                                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="contentPresenter"
                                Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                To="#FF27908E" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>

                                <!-- Mouse Leave animation to revert Foreground color -->
                                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="contentPresenter"
                                Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                To="#FF6D6D6D" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <Button x:Name="add_Copy" Padding="0,0,0,0" BorderThickness="0" Content="⚙️ Setting" 
        Margin="1795,0,5,1018" BorderBrush="{x:Null}" RenderTransformOrigin="0.5,0.5" 
        Foreground="#FF6D6D6D" Height="38" VerticalAlignment="Bottom" FontSize="18" Click="Button_Clicks">

                    <Button.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="10"/>
                        </Style>
                    </Button.Resources>

                    <Button.Background>
                        <LinearGradientBrush StartPoint="0.5,0">
                            <GradientStop Color="#FF0BA9A4"/>
                            <GradientStop Color="#FF418C8C" Offset="1"/>
                        </LinearGradientBrush>
                    </Button.Background>

                    <Button.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleY="1" ScaleX="1" />
                            <SkewTransform />
                            <RotateTransform />
                            <TranslateTransform />
                        </TransformGroup>
                    </Button.RenderTransform>

                    <!-- Apply the ControlTemplate with EventTriggers -->
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <!-- Original button border -->
                                <Border x:Name="buttonBorder" BorderBrush="Transparent" BorderThickness="0" CornerRadius="5" Background="{x:Null}">
                                    <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>

                                <!-- Overlay border for the click animation -->
                                <Border x:Name="overlayBorder" Background="White" Opacity="0" CornerRadius="5" IsHitTestVisible="False" />
                            </Grid>

                            <ControlTemplate.Triggers>
                                <!-- Mouse Enter animation to change Foreground color -->
                                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="contentPresenter"
                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                            To="#FF27908E" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>

                                <!-- Mouse Leave animation to revert Foreground color -->
                                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="contentPresenter"
                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                            To="#FF6D6D6D" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>

                                <!-- Click animation to grow the button and then shrink back -->

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>

                <TextBlock TextAlignment="Center" Text="{Binding CurrentTime}" FontSize="18" Foreground="Black" Margin="814,19,814,1008"/>
                <Image x:Name="back"

RenderTransformOrigin="0.527,0.502"
Margin="1057,3,0,1009"
Cursor="Hand"
MouseLeftButtonDown="back_MouseLeftButtonDown"
HorizontalAlignment="Left"
Width="50">
                    <Image.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform x:Name="scaleTransform"/>
                            <SkewTransform/>
                            <RotateTransform Angle="359.992"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Image.RenderTransform>
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value="0.6"/>
                                    <Setter Property="RenderTransform">
                                        <Setter.Value>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1.2" ScaleY="1.2"/>
                                                <SkewTransform/>
                                                <RotateTransform Angle="359.992"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter Property="Opacity" Value="1"/>
                                    <Setter Property="RenderTransform">
                                        <Setter.Value>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                <SkewTransform/>
                                                <RotateTransform Angle="359.992"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <Label Content="👤" FontSize="24" Margin="0,2,1862,1019"/>
            </Grid>

        </Grid>
        <Grid x:Name="addacc" Visibility="Collapsed">
            <local:Addacount x:Name="addaccount" Visibility="Visible"/>
        </Grid>

        <Label x:Name="header" Content="View Accounts" Margin="42,59,1504,930" FontSize="48" FontWeight="Bold"/>
        <Border x:Name="glowingBorder"
            CornerRadius="100"
            Margin="33,131,1527,930"
            RenderTransformOrigin="0.5,0.5">
            <Border.Background>
                <RadialGradientBrush>
                    <GradientStop Color="#FF11B6B5"/>
                    <GradientStop Color="#FFE3EBF3" Offset="1"/>
                </RadialGradientBrush>
            </Border.Background>
            <Border.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleY="-1"/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Border.RenderTransform>
        </Border>


        <Grid Width="1926" Margin="0,55,-26,-16">
            <local:report x:Name="report" Visibility="Collapsed"/>

        </Grid>

        <Grid x:Name="gsetting">
            <local:setting x:Name="setting" Visibility="Collapsed"/>
        </Grid>


    </Grid>
</UserControl>
